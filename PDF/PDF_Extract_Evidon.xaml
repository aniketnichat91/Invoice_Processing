<Activity mc:Ignorable="sap sap2010" x:Class="PDF_Extract_Evidon" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:av="http://schemas.microsoft.com/winfx/2006/xaml/presentation" xmlns:g="clr-namespace:GroupM_ASIP_PDF_Extraction;assembly=GroupM_ASIP_PDF_Extraction" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:mva="clr-namespace:Microsoft.VisualBasic.Activities;assembly=System.Activities" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=mscorlib" xmlns:str="clr-namespace:System.Text.RegularExpressions;assembly=System" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <x:Members>
    <x:Property Name="in_pdfFilePath" Type="InArgument(x:String)" />
    <x:Property Name="out_InvoiceNumber" Type="OutArgument(x:String)" />
    <x:Property Name="out_Ad" Type="OutArgument(x:String)" />
    <x:Property Name="out_Camp" Type="OutArgument(x:String)" />
    <x:Property Name="out_Agency" Type="OutArgument(x:String)" />
    <x:Property Name="out_Month" Type="OutArgument(x:String)" />
    <x:Property Name="out_RemAddress" Type="OutArgument(x:String)" />
    <x:Property Name="out_TotalAmount" Type="OutArgument(x:String)" />
  </x:Members>
  <mva:VisualBasic.Settings>
    <x:Null />
  </mva:VisualBasic.Settings>
  <sap:VirtualizedContainerService.HintSize>682.666666666667,1039.33333333333</sap:VirtualizedContainerService.HintSize>
  <sap2010:WorkflowViewState.IdRef>PDF_Extract_Evidon_1</sap2010:WorkflowViewState.IdRef>
  <TextExpression.NamespacesForImplementation>
    <scg:List x:TypeArguments="x:String" Capacity="22">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System.Activities.Expressions</x:String>
      <x:String>System.Activities.Validation</x:String>
      <x:String>System.Activities.XamlIntegration</x:String>
      <x:String>Microsoft.VisualBasic</x:String>
      <x:String>Microsoft.VisualBasic.Activities</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Data</x:String>
      <x:String>System.Diagnostics</x:String>
      <x:String>System.Drawing</x:String>
      <x:String>System.IO</x:String>
      <x:String>System.Linq</x:String>
      <x:String>System.Net.Mail</x:String>
      <x:String>System.Xml</x:String>
      <x:String>System.Xml.Linq</x:String>
      <x:String>System.Windows.Markup</x:String>
      <x:String>UiPath.Core</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Text.RegularExpressions</x:String>
    </scg:List>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <scg:List x:TypeArguments="AssemblyReference" Capacity="18">
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>System.ValueTuple</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
    </scg:List>
  </TextExpression.ReferencesForImplementation>
  <Flowchart DisplayName="PDF_Extract_Evidon" sap:VirtualizedContainerService.HintSize="662.666666666667,939.333333333333" sap2010:WorkflowViewState.IdRef="Flowchart_1">
    <Flowchart.Variables>
      <Variable x:TypeArguments="x:String" Name="str_Output" />
      <Variable x:TypeArguments="x:String" Name="str_Output_clean" />
      <Variable x:TypeArguments="x:String" Default="INVOICE #" Name="strLabelBefore_Inv" />
      <Variable x:TypeArguments="x:String" Default="Evidon, Inc." Name="strLabelAfter_Inv" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="Matches_Inv" />
      <Variable x:TypeArguments="x:String" Default="AdNotice for" Name="strLabelBefore_Month" />
      <Variable x:TypeArguments="x:String" Default="for" Name="strLabelAfter_Month" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="Matches_Month" />
      <Variable x:TypeArguments="x:String" Default="AdNotice for[^\n\r\t]*for" Name="strLabelBefore_Ad" />
      <Variable x:TypeArguments="x:String" Default="A[ ]?d[ ]?N[ ]?o[ ]?t[ ]?i[ ]?c[ ]?e" Name="strLabelAfter_Ad" />
      <Variable x:TypeArguments="x:String" Default="A[ ]?d[ ]?N[ ]?o[ ]?t[ ]?i[ ]?c[ ]?e[ ]?[:]" Name="strLabelBefore_Camp" />
      <Variable x:TypeArguments="x:String" Default="Impressions" Name="strLabelAfter_Camp" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="Matches_Ad" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="Matches_Camp" />
      <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="Matches_RemAddress" />
      <Variable x:TypeArguments="x:String" Default="AMOUNT" Name="strLabelBefore_TotalAmt" />
      <Variable x:TypeArguments="x:String" Default="AdNotice for" Name="strLabelAfter_TotalAmt" />
    </Flowchart.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        <av:Point x:Key="ShapeLocation">270,2.5</av:Point>
        <av:Size x:Key="ShapeSize">60,74.6666666666667</av:Size>
        <av:PointCollection x:Key="ConnectorLocation">300,77.7 300,103.6</av:PointCollection>
        <x:Double x:Key="Width">628.8</x:Double>
        <x:Double x:Key="Height">903.19999999999993</x:Double>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <Flowchart.StartNode>
      <x:Reference>__ReferenceID8</x:Reference>
    </Flowchart.StartNode>
    <FlowStep x:Name="__ReferenceID8">
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <av:Point x:Key="ShapeLocation">200,103.6</av:Point>
          <av:Size x:Key="ShapeSize">200,52.6666666666667</av:Size>
          <av:PointCollection x:Key="ConnectorLocation">300,156.4 300,180</av:PointCollection>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ReadPDFText DisplayName="Read PDF Text" FileName="[in_pdfFilePath]" sap:VirtualizedContainerService.HintSize="334,58.6666666666667" sap2010:WorkflowViewState.IdRef="ReadPDFText_1" Range="All" Text="[str_Output]">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:ReadPDFText>
      <FlowStep.Next>
        <FlowStep x:Name="__ReferenceID0">
          <sap:WorkflowViewStateService.ViewState>
            <scg:Dictionary x:TypeArguments="x:String, x:Object">
              <av:Point x:Key="ShapeLocation">168.8,180</av:Point>
              <av:Size x:Key="ShapeSize">262,62</av:Size>
              <av:PointCollection x:Key="ConnectorLocation">299.8,242 299.8,255.6 300,255.6</av:PointCollection>
            </scg:Dictionary>
          </sap:WorkflowViewStateService.ViewState>
          <Assign DisplayName="Replace newline in the PDF text" sap:VirtualizedContainerService.HintSize="262,62" sap2010:WorkflowViewState.IdRef="Assign_1">
            <Assign.To>
              <OutArgument x:TypeArguments="x:String">[str_Output_clean]</OutArgument>
            </Assign.To>
            <Assign.Value>
              <InArgument x:TypeArguments="x:String">[str_Output.Replace(environment.NewLine," ")]</InArgument>
            </Assign.Value>
          </Assign>
          <FlowStep.Next>
            <FlowStep x:Name="__ReferenceID1">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <av:Point x:Key="ShapeLocation">200,255.6</av:Point>
                  <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                  <av:PointCollection x:Key="ConnectorLocation">300,324.4 300,345.6</av:PointCollection>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <Sequence DisplayName="Get Invoice Number" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_2">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:Matches sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Matches_1" Input="[str_Output_clean]" IsBuilderTabModified="False" Pattern="[&quot;(?&lt;=&quot; + strLabelBefore_Inv + &quot;)(.*?)(?=&quot; + strLabelAfter_Inv + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[Matches_Inv]">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                </ui:Matches>
                <If Condition="[(Matches_Inv is Nothing ) or (Matches_Inv.Count=0)]" DisplayName="Get Invoice Number" sap:VirtualizedContainerService.HintSize="577.6,302.4" sap2010:WorkflowViewState.IdRef="If_1">
                  <If.Then>
                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_1" Text="No match" />
                  </If.Then>
                  <If.Else>
                    <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_1">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_2">
                        <Assign.To>
                          <OutArgument x:TypeArguments="x:String">[out_InvoiceNumber]</OutArgument>
                        </Assign.To>
                        <Assign.Value>
                          <InArgument x:TypeArguments="x:String">[Matches_Inv(0).value.trim]</InArgument>
                        </Assign.Value>
                      </Assign>
                    </Sequence>
                  </If.Else>
                </If>
              </Sequence>
              <FlowStep.Next>
                <FlowStep x:Name="__ReferenceID2">
                  <sap:WorkflowViewStateService.ViewState>
                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                      <av:Point x:Key="ShapeLocation">200,345.6</av:Point>
                      <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                      <av:PointCollection x:Key="ConnectorLocation">300,414.4 300,435.6</av:PointCollection>
                    </scg:Dictionary>
                  </sap:WorkflowViewStateService.ViewState>
                  <Sequence DisplayName="Get Month" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_4">
                    <sap:WorkflowViewStateService.ViewState>
                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                      </scg:Dictionary>
                    </sap:WorkflowViewStateService.ViewState>
                    <ui:Matches sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Matches_2" Input="[str_Output_clean]" IsBuilderTabModified="False" Pattern="[&quot;(?&lt;=&quot; + strLabelBefore_Month + &quot;)(.*?)(?=&quot; + strLabelAfter_Month + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[Matches_Month]">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                    </ui:Matches>
                    <If Condition="[(Matches_Month is Nothing ) or (Matches_Month.Count=0)]" DisplayName="Get Month" sap:VirtualizedContainerService.HintSize="577.6,302.4" sap2010:WorkflowViewState.IdRef="If_2">
                      <If.Then>
                        <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_2" Text="No match" />
                      </If.Then>
                      <If.Else>
                        <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_3">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_3">
                            <Assign.To>
                              <OutArgument x:TypeArguments="x:String">[out_Month]</OutArgument>
                            </Assign.To>
                            <Assign.Value>
                              <InArgument x:TypeArguments="x:String">[Matches_Month(0).value.trim.substring(0,3)]</InArgument>
                            </Assign.Value>
                          </Assign>
                        </Sequence>
                      </If.Else>
                    </If>
                  </Sequence>
                  <FlowStep.Next>
                    <FlowStep x:Name="__ReferenceID3">
                      <sap:WorkflowViewStateService.ViewState>
                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                          <av:Point x:Key="ShapeLocation">200,435.6</av:Point>
                          <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                          <av:PointCollection x:Key="ConnectorLocation">300,504.4 300,535.6</av:PointCollection>
                        </scg:Dictionary>
                      </sap:WorkflowViewStateService.ViewState>
                      <Sequence DisplayName="Get Advertiser" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_6">
                        <sap:WorkflowViewStateService.ViewState>
                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                          </scg:Dictionary>
                        </sap:WorkflowViewStateService.ViewState>
                        <ui:Matches sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Matches_3" Input="[str_Output_clean]" IsBuilderTabModified="False" Pattern="[&quot;(?&lt;=&quot; + strLabelBefore_Ad + &quot;)(.*?)(?=&quot; + strLabelAfter_Ad + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[Matches_Ad]">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                        </ui:Matches>
                        <If Condition="[(Matches_Ad is Nothing ) or (Matches_Ad.Count=0)]" DisplayName="Get Invoice Number" sap:VirtualizedContainerService.HintSize="577.6,302.4" sap2010:WorkflowViewState.IdRef="If_3">
                          <If.Then>
                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_3" Text="No match" />
                          </If.Then>
                          <If.Else>
                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_4">
                                <Assign.To>
                                  <OutArgument x:TypeArguments="x:String">[out_Ad]</OutArgument>
                                </Assign.To>
                                <Assign.Value>
                                  <InArgument x:TypeArguments="x:String">[Matches_Ad(0).value.trim.replace("•","").trim]</InArgument>
                                </Assign.Value>
                              </Assign>
                            </Sequence>
                          </If.Else>
                        </If>
                      </Sequence>
                      <FlowStep.Next>
                        <FlowStep x:Name="__ReferenceID4">
                          <sap:WorkflowViewStateService.ViewState>
                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                              <av:Point x:Key="ShapeLocation">200,535.6</av:Point>
                              <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                              <av:PointCollection x:Key="ConnectorLocation">300,604.4 300,625.6</av:PointCollection>
                            </scg:Dictionary>
                          </sap:WorkflowViewStateService.ViewState>
                          <Sequence DisplayName="Get Campaign" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_8">
                            <sap:WorkflowViewStateService.ViewState>
                              <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                              </scg:Dictionary>
                            </sap:WorkflowViewStateService.ViewState>
                            <ui:Matches sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Matches_4" Input="[str_Output_clean]" IsBuilderTabModified="False" Pattern="[&quot;(?&lt;=&quot; + strLabelBefore_Camp + &quot;)(.*?)(?=&quot; + strLabelAfter_Camp + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[Matches_Camp]">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                            </ui:Matches>
                            <If Condition="[(Matches_Camp is Nothing ) or (Matches_Camp.Count=0)]" DisplayName="Get Invoice Number" sap:VirtualizedContainerService.HintSize="577.6,302.4" sap2010:WorkflowViewState.IdRef="If_4">
                              <If.Then>
                                <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_4" Text="No match" />
                              </If.Then>
                              <If.Else>
                                <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_5">
                                    <Assign.To>
                                      <OutArgument x:TypeArguments="x:String">[out_Camp]</OutArgument>
                                    </Assign.To>
                                    <Assign.Value>
                                      <InArgument x:TypeArguments="x:String">[Matches_Camp(0).value.trim.replace("•","").trim]</InArgument>
                                    </Assign.Value>
                                  </Assign>
                                </Sequence>
                              </If.Else>
                            </If>
                          </Sequence>
                          <FlowStep.Next>
                            <FlowStep x:Name="__ReferenceID5">
                              <sap:WorkflowViewStateService.ViewState>
                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                  <av:Point x:Key="ShapeLocation">200,625.6</av:Point>
                                  <av:Size x:Key="ShapeSize">200,69.3333333333333</av:Size>
                                  <av:PointCollection x:Key="ConnectorLocation">300,694.4 300,715.6</av:PointCollection>
                                </scg:Dictionary>
                              </sap:WorkflowViewStateService.ViewState>
                              <Sequence DisplayName="Get Remit Address" sap:VirtualizedContainerService.HintSize="200,69.3333333333333" sap2010:WorkflowViewState.IdRef="Sequence_10">
                                <Sequence.Variables>
                                  <Variable x:TypeArguments="x:String" Default="Remit To:" Name="strLabelBefore_RemAddress" />
                                  <Variable x:TypeArguments="x:String" Default="Wire[/]ACH Instructions" Name="strLabelAfter_RemAddress" />
                                </Sequence.Variables>
                                <sap:WorkflowViewStateService.ViewState>
                                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                  </scg:Dictionary>
                                </sap:WorkflowViewStateService.ViewState>
                                <ui:Matches sap:VirtualizedContainerService.HintSize="648.8,60" sap2010:WorkflowViewState.IdRef="Matches_5" Input="[str_Output_clean]" IsBuilderTabModified="False" Pattern="[&quot;(?&lt;=&quot; + strLabelBefore_RemAddress + &quot;)(.*?)(?=&quot; + strLabelAfter_RemAddress + &quot;)&quot;]" RegexOption="Compiled" Result="[Matches_RemAddress]">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                </ui:Matches>
                                <If Condition="[(Matches_RemAddress is Nothing ) or (Matches_RemAddress.Count=0)]" DisplayName="Get Invoice Number" sap:VirtualizedContainerService.HintSize="648.8,602.4" sap2010:WorkflowViewState.IdRef="If_5">
                                  <If.Then>
                                    <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_5" Text="No match" />
                                  </If.Then>
                                  <If.Else>
                                    <Sequence sap:VirtualizedContainerService.HintSize="375.2,452.8" sap2010:WorkflowViewState.IdRef="Sequence_9">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Assign sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Assign_6">
                                        <Assign.To>
                                          <OutArgument x:TypeArguments="x:String">[out_RemAddress]</OutArgument>
                                        </Assign.To>
                                        <Assign.Value>
                                          <InArgument x:TypeArguments="x:String">[Matches_RemAddress(0).value.trim]</InArgument>
                                        </Assign.Value>
                                      </Assign>
                                      <ui:Replace sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Replace_1" Input="[out_RemAddress]" IsBuilderTabModified="False" Pattern="Subtotal [$][0-9]{1,3}(,[0-9]{3})*(\.[0-9]+)? (USD|CAD)" RegexOption="IgnoreCase, Compiled" Result="[out_RemAddress]">
                                        <ui:Replace.Replacement>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:Replace.Replacement>
                                      </ui:Replace>
                                      <ui:Replace sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Replace_2" Input="[out_RemAddress]" IsBuilderTabModified="False" Pattern="Tax Total [$][0-9]{1,3}(,[0-9]{3})*(\.[0-9]+)? (USD|CAD)" RegexOption="IgnoreCase, Compiled" Result="[out_RemAddress]">
                                        <ui:Replace.Replacement>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:Replace.Replacement>
                                      </ui:Replace>
                                      <ui:Replace sap:VirtualizedContainerService.HintSize="333.6,60" sap2010:WorkflowViewState.IdRef="Replace_3" Input="[out_RemAddress]" IsBuilderTabModified="False" Pattern="Total [$][0-9]{1,3}(,[0-9]{3})*(\.[0-9]+)? (USD|CAD)" RegexOption="IgnoreCase, Compiled" Result="[out_RemAddress]">
                                        <ui:Replace.Replacement>
                                          <InArgument x:TypeArguments="x:String">
                                            <Literal x:TypeArguments="x:String" Value="" />
                                          </InArgument>
                                        </ui:Replace.Replacement>
                                      </ui:Replace>
                                    </Sequence>
                                  </If.Else>
                                </If>
                              </Sequence>
                              <FlowStep.Next>
                                <FlowStep x:Name="__ReferenceID7">
                                  <sap:WorkflowViewStateService.ViewState>
                                    <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                      <av:Point x:Key="ShapeLocation">200,715.6</av:Point>
                                      <av:Size x:Key="ShapeSize">200,68.6666666666667</av:Size>
                                      <av:PointCollection x:Key="ConnectorLocation">300,784.4 300,815.6</av:PointCollection>
                                    </scg:Dictionary>
                                  </sap:WorkflowViewStateService.ViewState>
                                  <Sequence DisplayName="Get Agency" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_13">
                                    <Sequence.Variables>
                                      <Variable x:TypeArguments="scg:List(x:Single)" Name="lst_Agency" />
                                    </Sequence.Variables>
                                    <sap:WorkflowViewStateService.ViewState>
                                      <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                      </scg:Dictionary>
                                    </sap:WorkflowViewStateService.ViewState>
                                    <g:ExtractData DisplayName="Extract data" H="10" sap:VirtualizedContainerService.HintSize="200,22.4" sap2010:WorkflowViewState.IdRef="ExtractData_1" PDFFilePath="[in_pdfFilePath]" TargetData="[out_Agency]" W="200" X="20" Y="590" />
                                  </Sequence>
                                  <FlowStep.Next>
                                    <FlowStep x:Name="__ReferenceID6">
                                      <sap:WorkflowViewStateService.ViewState>
                                        <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                          <av:Point x:Key="ShapeLocation">200,815.6</av:Point>
                                          <av:Size x:Key="ShapeSize">200,68.6666666666667</av:Size>
                                        </scg:Dictionary>
                                      </sap:WorkflowViewStateService.ViewState>
                                      <Sequence DisplayName="Get Total Amount" sap:VirtualizedContainerService.HintSize="200,68.8" sap2010:WorkflowViewState.IdRef="Sequence_12">
                                        <Sequence.Variables>
                                          <Variable x:TypeArguments="scg:IEnumerable(str:Match)" Name="Matches_TotalAmt" />
                                        </Sequence.Variables>
                                        <sap:WorkflowViewStateService.ViewState>
                                          <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                          </scg:Dictionary>
                                        </sap:WorkflowViewStateService.ViewState>
                                        <ui:Matches sap:VirtualizedContainerService.HintSize="577.6,60" sap2010:WorkflowViewState.IdRef="Matches_6" Input="[str_Output_clean]" IsBuilderTabModified="False" Pattern="[&quot;(?&lt;=&quot; + strLabelBefore_TotalAmt + &quot;)(.*?)(?=&quot; + strLabelAfter_TotalAmt + &quot;)&quot;]" RegexOption="IgnoreCase, Compiled" Result="[Matches_TotalAmt]">
                                          <sap:WorkflowViewStateService.ViewState>
                                            <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                              <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                            </scg:Dictionary>
                                          </sap:WorkflowViewStateService.ViewState>
                                        </ui:Matches>
                                        <If Condition="[(Matches_TotalAmt is Nothing ) or (Matches_TotalAmt.Count=0)]" DisplayName="Get Invoice Number" sap:VirtualizedContainerService.HintSize="577.6,302.4" sap2010:WorkflowViewState.IdRef="If_6">
                                          <If.Then>
                                            <WriteLine DisplayName="Write Line" sap:VirtualizedContainerService.HintSize="229.6,62.4" sap2010:WorkflowViewState.IdRef="WriteLine_6" Text="No match" />
                                          </If.Then>
                                          <If.Else>
                                            <Sequence sap:VirtualizedContainerService.HintSize="304,152.8" sap2010:WorkflowViewState.IdRef="Sequence_11">
                                              <sap:WorkflowViewStateService.ViewState>
                                                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                                                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                                                </scg:Dictionary>
                                              </sap:WorkflowViewStateService.ViewState>
                                              <Assign sap:VirtualizedContainerService.HintSize="262.4,60" sap2010:WorkflowViewState.IdRef="Assign_8">
                                                <Assign.To>
                                                  <OutArgument x:TypeArguments="x:String">[out_TotalAmount]</OutArgument>
                                                </Assign.To>
                                                <Assign.Value>
                                                  <InArgument x:TypeArguments="x:String">[Matches_TotalAmt(0).value.trim.replace("$","").trim]</InArgument>
                                                </Assign.Value>
                                              </Assign>
                                            </Sequence>
                                          </If.Else>
                                        </If>
                                      </Sequence>
                                    </FlowStep>
                                  </FlowStep.Next>
                                </FlowStep>
                              </FlowStep.Next>
                            </FlowStep>
                          </FlowStep.Next>
                        </FlowStep>
                      </FlowStep.Next>
                    </FlowStep>
                  </FlowStep.Next>
                </FlowStep>
              </FlowStep.Next>
            </FlowStep>
          </FlowStep.Next>
        </FlowStep>
      </FlowStep.Next>
    </FlowStep>
    <x:Reference>__ReferenceID0</x:Reference>
    <x:Reference>__ReferenceID1</x:Reference>
    <x:Reference>__ReferenceID2</x:Reference>
    <x:Reference>__ReferenceID3</x:Reference>
    <x:Reference>__ReferenceID4</x:Reference>
    <x:Reference>__ReferenceID5</x:Reference>
    <x:Reference>__ReferenceID6</x:Reference>
    <x:Reference>__ReferenceID7</x:Reference>
  </Flowchart>
</Activity>